version: '3'

volumes:
  kong_data: {}
  konga_data: {}
  konga_migration_data: {}
  
networks:
  kong-net:
    driver: bridge

services:
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: 'postgres:9.6'
    restart: always
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_DB}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    ports:
      - '5432:5432'
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-U'
        - kong
      interval: 5s
      timeout: 5s
      retries: 5
      
  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: 'kong:latest'
    command: kong migrations bootstrap
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_PG_HOST: ${PG_HOST}
      KONG_PG_DB: ${PG_DB}
      KONG_PG_USER: ${PG_USER}
      KONG_PG_PASSWORD: ${PG_PASSWORD}
    links:
      - ${PG_HOST}
    depends_on:
      - ${PG_HOST}
      
  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: 'kong:latest'
    restart: always
    networks:
      - kong-net
    environment:
      KONG_PG_HOST: ${PG_HOST}
      KONG_PG_USER: ${PG_USER}
      KONG_PG_PASSWORD: ${PG_PASSWORD}
      KONG_PROXY_LISTEN: '0.0.0.0:8000'
      KONG_PROXY_LISTEN_SSL: '0.0.0.0:8443'
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
    depends_on:
      - kong-migration
      - ${PG_HOST}
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://kong:8001'
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - '8001:8001'
      - '8000:8000'
      
  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: 'pantsel/konga:next'
    command: '-c prepare -a postgres -u postgresql://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:5432/${KONGA_DB}'
    networks:
      - kong-net
    volumes: 
      - konga_migration_data:/app/kongadata
    restart: on-failure
    links:
      - ${PG_HOST}
    depends_on:
      - ${PG_HOST}
      
  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: 'pantsel/konga:next'
    restart: always
    networks:
      - kong-net
    volumes: 
      - konga_data:/app/kongadata
    environment:
      DB_ADAPTER: postgres
      DB_HOST: ${PG_HOST}
      DB_USER: ${PG_USER}
      DB_PASSWORD: ${PG_PASSWORD}
      TOKEN_SECRET: ${TOKEN_SECRET}
      DB_DATABASE: ${KONGA_DB}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - ${PG_HOST}
    ports:
      - '1337:1337'
